---
name: docs-npm-release
run-name: "Release Docs${{ github.event_name == 'workflow_dispatch' && ' manually dispatched' || ' from PR' }}"

concurrency: docs-release-${{ github.ref }}

on:
  pull_request:
    types: [closed]
    branches: ["main", "main-*"]
    paths: ["docs/**", ".github/workflows/docs**"]
  workflow_dispatch:
    inputs:
      BASELINE:
        description: "Baseline branch"
        required: true
        default: "main"

env:
  DOCS_SITE_URL: https://stunning-enigma-169l5kv.pages.github.io

jobs:
  release:
    name: Docs release
    if: github.event_name == 'workflow_dispatch'
      || (github.event.pull_request.merged == true && !contains(join(github.event.pull_request.labels.*.name, ', '), 'skip-docs-release')
      || vars.DEVELOPMENT_FLOW == 'trunk-based-development')
    runs-on: ubuntu-24.04
    steps:
      - name: Get input parameters
        run: |
          BASELINE_BRANCH=${{ github.event.inputs.BASELINE || github.ref }}
          echo "BASELINE_BRANCH=${BASELINE_BRANCH#refs/heads/}" >> "$GITHUB_ENV"

      - name: Checkout merge commit
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASELINE_BRANCH }}
          fetch-depth: 0
          persist-credentials: false

      - name: NPM / Setup Dependencies Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('docs/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup asdf Cache
        id: asdf-cache
        uses: actions/cache@v4
        continue-on-error: true
        with:
          path: ~/.asdf/data
          key: ${{ runner.os }}-asdf-${{ hashFiles('docs/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Save tool-versions content
        run: |
          {
            echo "TOOL_VERSIONS<<EOF"
            cat docs/.tool-versions
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Setup asdf environment
        uses:
          asdf-vm/actions/install@v3
          # https://github.com/asdf-vm/actions/issues/356
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        with:
          tool_versions: ${{ env.TOOL_VERSIONS }}

      - name: NPM / Set npmrc
        env:
          NPM_AUTH: ${{ secrets.NPM_TOKEN }}
          NPM_REGISTRY: "https://registry.npmjs.org/"
        run: |
          echo "registry=${NPM_REGISTRY}" >> /home/runner/.npmrc
          echo "@inditextech:registry=${NPM_REGISTRY}" >> /home/runner/.npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH}" >> /home/runner/.npmrc
          echo "always-auth=true" >> /home/runner/.npmrc

      - name: NPM / Create Cache Folders
        run: |
          mkdir -p "$HOME"/.npm
          mkdir -p "$HOME"/.asdf/data

      - name: Prepare committer information and set GPG key
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCM_COMMITTER_PGP_KEY: ${{ secrets.CI_GPG_SECRET_KEY }}
        run: |
          git config --global credential.helper store
          cat <<EOT >> ~/.git-credentials
          https://ci-user:$GITHUB_TOKEN@github.com
          EOT

          echo "$SCM_COMMITTER_PGP_KEY" | gpg --batch --import
          git config user.name "InditexTech CI"
          git config user.email "oso@inditex.com"

      - name: NPM / Get release version
        id: update-changelog
        working-directory: docs
        run: |
          echo "version=$(cat .release)" >> "$GITHUB_OUTPUT"
          echo "RELEASE_VERSION=$(cat .release)" >> "$GITHUB_ENV"

      - name: NPM / Prepare release
        working-directory: docs
        env:
          RELEASE_VERSION: ${{ steps.update-changelog.outputs.version }}
          GIT_CREDENTIALS: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com
        run: |
          npm run version:release
          npm run release:prepare

      - name: Release / Commit and Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: docs
        run: |
          git pull --tags
          git commit -i package.json package-lock.json -m "[npm-scripts] Release ${{ steps.update-changelog.outputs.version }}" --no-verify
          if git rev-parse "docs/${{ steps.update-changelog.outputs.version }}" >/dev/null 2>&1; then
            git tag -d docs/${{ steps.update-changelog.outputs.version }};
            git push --delete origin docs/${{ steps.update-changelog.outputs.version }};
          fi
          git tag docs/${{ steps.update-changelog.outputs.version }}
          git push --atomic --no-verify origin HEAD docs/${{ steps.update-changelog.outputs.version }}

      - name: NPM / Set next development version
        working-directory: docs
        run: |
          npm run version:development

      - name: Next Development Iteration / Commit Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_PUSH }}
        working-directory: docs
        run: |
          git commit -i package.json package-lock.json -m "[npm-scripts] prepare for next development iteration" --no-verify
          git push --no-verify origin HEAD

      - name: Next Development Iteration / Create Sync Branch PR into Develop
        id: sync-branch-pr
        continue-on-error: true
        if: ${{ vars.DEVELOPMENT_FLOW != 'trunk-based-development' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DEVELOP=${BASELINE_BRANCH/main/develop}
          echo "DEVELOP=$DEVELOP" >> "$GITHUB_OUTPUT"
          # Avoid creating sync PR if the corresponding development branch does not exist
          if [[ -z $(git ls-remote --heads origin "$DEVELOP") ]]; then
            echo "The '$DEVELOP' branch does not exist in remote. Skipping the creation of sync PR"
          else
            git checkout -b "automated/sync-docs-release-${{ steps.update-changelog.outputs.version }}-to-$DEVELOP"
            git push --no-verify -u origin HEAD
            gh pr create --base "$DEVELOP" \
              --title "Sync docs release ${{ steps.update-changelog.outputs.version }} to $DEVELOP" \
              --body "**Automated Pull Request**"
          fi

      - name: Github Release / Create
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        id: github-release
        if: false
        continue-on-error: true
        with:
          name: docs/${{ steps.update-changelog.outputs.version }}
          tag: docs/${{ steps.update-changelog.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Check out the documentation [here]($DOCS_SITE_URL/weavejs/index.html)

      - name: Comment in PR / Sync PR creation failed
        if: ${{ vars.DEVELOPMENT_FLOW != 'trunk-based-development' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DEVELOP=${BASELINE_BRANCH/main/develop}
          git remote set-url origin "https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY"
          # shellcheck disable=SC2140
          if ! git ls-remote --exit-code --heads origin automated/sync-docs-release-"${{ steps.update-changelog.outputs.version }}"-to-"$DEVELOP"; then
            gh pr comment "${{ github.event.number }}" --body "An error occurred creating the \`sync\` branch that synchronizes the \`$BASELINE_BRANCH\` and \`$DEVELOP\` branches.
            Please create a branch from \`$BASELINE_BRANCH\` (e.g. \`internal/sync-$BASELINE_BRANCH-with-$DEVELOP\`) and then create a pull request against \`$DEVELOP\` to finish the release process."
          fi

      - name: Comment in PR / Release docs creation failed
        if: ${{ steps.github-release.outcome == 'failure' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh pr comment ${{ github.event.number }} --body "An error occurred creating the Github Docs Release.
          You can manually complete the docs release by creating it in the [releases](https://github.com/${{ github.repository }}/releases)
          page."

      - name: Trigger / Publish Docs
        uses: inditex/gha-workflowdispatch@v1
        with:
          workflow: docs-npm_node-publish.yml
          inputs: '{ "BASELINE": "${{ env.BASELINE_BRANCH }}" }'
